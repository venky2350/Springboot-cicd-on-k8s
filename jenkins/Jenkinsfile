pipeline {
  agent any

  tools {
    maven 'MAVEN_HOME'
    jdk 'JAVA_HOME'
  }

  environment {
    SONARQUBE = 'SonarQube'
    DOCKER_IMAGE = 'venkatesh384/jenkins-demo'
  }

  stages {
    stage('Checkout') {
      steps {
        git 'https://github.com/venky2350/Springboot-cicd-on-k8s.git'
      }
    }

    stage('Build') {
      steps {
        sh 'mvn clean package'
      }
    }

    stage('SonarQube Analysis') {
      steps {
        withSonarQubeEnv("${SONARQUBE}") {
          sh 'mvn sonar:sonar'
        }
      }
    }

    stage('Docker Build & Push') {
      steps {
        withCredentials([usernamePassword(
          credentialsId: 'dockerhub-creds',
          usernameVariable: 'DOCKER_USERNAME',
          passwordVariable: 'DOCKER_PASSWORD')]) {

          sh '''
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker build -t $DOCKER_IMAGE:latest .
            docker push $DOCKER_IMAGE:latest
          '''
        }
      }
    }

    stage('Trivy Security Scan') {
      steps {
        sh './scan-trivy.sh'
      }
    }

    stage('Copy Reports') {
      steps {
        sh '''
          mkdir -p reports
          cp trivy-reports/image-scan-report.txt reports/trivy-report.txt || echo "No Trivy report"
          cp sonar-report.html reports/sonar-report.html || echo "No Sonar report"
        '''
      }
    }

    stage('Deploy to Kubernetes') {
      steps {
        sh '''
          kubectl apply -f manifests/namespace.yaml
          kubectl apply -f manifests/
        '''
      }
    }
  }

  post {
    always {
      cleanWs()
    }
  }
}
